import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { trpc } from "@/utils/trpc";
import { ComputerCard } from "@/components/computer-card";
import { AddComputer } from "@/components/add-computer";

const Home: NextPage = () => {
  const computers = trpc.computersRouter.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Traffic Blocker | Computers</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="grid min-h-screen grid-rows-[4rem,1fr] bg-slate-200 font-sans">
        <header className="flex items-center bg-slate-300 p-8">
          <nav className="flex w-full flex-row items-center gap-4 text-slate-700">
            <h1 className="text-2xl">Traffic Blocker</h1>
            <Link href="/">Computers</Link>
            <Link href="/rules">Rules</Link>
            <AddComputer refetch={computers.refetch} />
          </nav>
        </header>

        <div className="flex flex-row flex-wrap place-content-start gap-4 p-8">
          {computers.isLoading && <p>Loading...</p>}
          {computers.data?.map((computer) => (
            <ComputerCard
              key={computer.macAddress}
              computer={computer}
              refetch={computers.refetch}
            />
          ))}
        </div>
      </main>
    </>
  );
};

export default Home;
